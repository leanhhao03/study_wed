
@import url(https://fonts.googleapis.com/css?family=Oleo%20Script);
@import url(https://fonts.googleapis.com/css2?family=Comfortaa:wght@400;700&display=swap);

#calendar {
    font-family: 'Comfortaa';
    transition: all 0.3s ease;
}

#calendar .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 20px;
    background-color: #fff;
    border-bottom: 5px solid #000;
}

#calendar .title {
    font-size: 4.2rem;
    width: 55%;
}

#calendar .title a {
    text-decoration: none;
    color: #000;
    font-family: 'Oleo Script';

}

.calendar-container {
    background: linear-gradient(120deg, #FBD0D9 20%, #C3EBEA 80%);
    display: grid;
    grid-template-columns: 1fr 7fr;
    gap: 20px;
    padding: 30px 0;
    height: 90vh;
}

.calendar-container .left-menu {
    display: flex;
    flex-direction: column;
    gap: 30px;
    border-right: 2px solid #000;
    padding: 20px;
    width: 250px;
}

.calendar-container .left-menu a {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 15px 30px;
    border-radius: 10px;
    font-size: 20px;
    text-decoration: none;
    gap: 10px;
    background-color: #fff;
}

.calendar-container .left-menu-icon {
    font-size: 18px;
    color: transparent;
    stroke: #000;
    stroke-width: 40px;
}

.calendar-container .left-menu span {
    color: #000;
}

.calendar-box {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 550px;
    padding: 20px;
    margin: 20px 20px 150px 0;
    gap: 40px;
    row-gap: 0;
    background: linear-gradient(
        10deg,
        rgb(255, 218, 230) 0%,
        rgb(219, 175, 255) 49%,
        rgb(169, 182, 255) 100%
    );
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.calendar-header {
    font-size: 1.6em;
    font-weight: bold;
    grid-column: 1 / -1;
    text-align: center;
    height: 25px;
}

.calendar-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    height: 280px;
    text-align: center;
    margin-top: 15px;
    margin-bottom: 150px;
}

.day {
    font-weight: bold;
    margin-bottom: 20px;
}

.date {
    padding: 10px;
    background: #f0f0f0;
    cursor: pointer;
    border: 1px solid #000;
    height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.date.manual-selected {
    background: linear-gradient(
        10deg,
        rgb(255, 218, 230) 0%,
        rgb(219, 175, 255) 49%,
        rgb(169, 182, 255) 100%
    );
    color: #000;
    font-weight: bold;
    transition: background 0.3s ease;
    cursor: pointer;
}

/* Kích hoạt animation khi hover hoặc thêm class active */
.date.manual-selected:hover,
.date.manual-selected.active {
    background-color: #6A7FDB;
    animation: jelly 0.4s ease;
}

.date.disabled {
    color: rgba(0, 0, 0, 0.3);
    pointer-events: none;
    background: #f8f8f8;
}

.schedule-box {
    background-color: transparent;
    padding: 20px;
    display: grid;
    grid-auto-rows: min-content;
    gap: 30px;
    max-height: 400px;
    overflow-y: auto;
}

.schedule-box .event {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 0.5fr;
    align-items: center;
    padding: 10px;
    border-radius: 10px;
    background: #C3EBEA;
    font-size: 1rem;
    text-align: center;
    height: 40px;
}

.event:nth-child(even) {
    background: #FBD0D9;
}

.remind-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 30px;
    padding: 20px 20px 20px 0;
    margin-bottom: 50px;
}

.left-column {
    display: grid;
    grid-template-rows: auto auto;
    gap: 10px;
}

.remind-grid .area-of-calendar {
    position: relative;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    grid-row: 1;
    height: 500px;
    opacity: 0.8;
    overflow: hidden;
    z-index: 1;
}

/* Lớp nền quay */
.remind-grid .area-of-calendar::before {
    content: "";
    position: absolute;
    top: -25%;
    left: -25%;
    width: 155%;
    height: 177%;
    background: linear-gradient(
        90deg,
        rgb(255, 218, 230) 0%,
        rgb(226, 190, 255) 49%,
        rgb(186, 196, 255) 100%
    );
    border-radius: inherit;
    z-index: -1;
    animation: effect infinite 3s linear;
    
}

.remind-grid .area-of-calendar .content {
    position: relative;
    z-index: 2;
}

.remind-grid .calendar-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.remind-grid .calendar-header button {
    cursor: pointer;
    background: transparent;
    border: none;
}

.month-nav{
   font-size: 18px;
   gap: 10px;
   display: flex;
   justify-content: space-between;
}

.month-nav .disabled {
   opacity: 0.3;
   cursor: not-allowed;
}

.time-picker-overlay {
    background: linear-gradient(120deg, #FAD0C4 20%, #C3EBEA 80%);
    padding: 20px;
    border-radius: 10px;
    text-align: center;
    display: flex;
    justify-content: space-around;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.time-picker {
    display: flex;
    justify-content: center;
    width: 100%;
}

.time-columns {
    width: 80px;
    max-height: 200px;
    overflow-y: auto;
    scroll-snap-type: y mandatory;
    scrollbar-width: none;
}

.time-list {
    list-style: none;
    padding: 0;
    margin: 0;
    text-align: center;
}

.time-list li {
    font-size: 20px;
    padding: 10px;
    cursor: pointer;
    scroll-snap-align: center;
}

.time-list li.hover {
    background: #E4EFF0;
    border-radius: 30px;
}

.save-time-btn {
    margin-top: 10px;
    padding: 10px;
    background: #edd2ff;
    border-radius: 10px;
    border: none;
    font-size: 18px;
    cursor: pointer;
    height: 50px;
    width: 100px;
    position: relative;
    overflow: hidden; /* Đảm bảo hiệu ứng không tràn ra ngoài */
    font-weight: bold;
    transition: all 0.3s ease;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
    
}

.save-time-btn::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 300%;
    height: 300%;
    background-color: #d28eff;
    transition: transform 0.4s ease-in-out;
    border-radius: 50%;
    z-index: 0;
    transform: translate(-50%, -50%) scale(0);
    opacity: 0.7;
    z-index: -1;
}
  
.save-time-btn:hover::before {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.9;
}

.save-time-btn:hover {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
    transform: translateY(-3px);
    color: #1a1a2e;
}
  
/* Hiệu ứng sóng khi nhấn */
.save-time-btn:active::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 120%;
    height: 120%;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    animation: ripple 0.5s ease-out;
    z-index: 1;
}

/* Hiệu ứng sáng nhẹ */
.save-time-btn::after {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.5) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: skewX(-20deg);
    transition: left 0.6s ease-in-out;
}

.save-time-btn:hover::after {
    left: 100%;
}


.remind-btn {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
    margin-bottom: 20px;
}

.remind-btn button {
    position: relative;
    margin: 0;
    padding: 0.8em 1em;
    outline: none;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    border: none;
    text-transform: uppercase;
    background-color: #eddffd;
    border-radius: 10px;
    color: #000000;
    font-weight: 400px;
    font-size: 18px;
    font-family: inherit;
    z-index: 0;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.02, 0.01, 0.47, 1);
  }
  
  .remind-btn button:hover {
    animation: sh0 0.5s ease-in-out both;
  }

  .remind-btn button:hover span {
    animation: storm 0.7s ease-in-out both;
    animation-delay: 0.06s;
  }
  
  .remind-btn button::before,
  .remind-btn button::after {
    content: '';
    position: absolute;
    right: 0;
    bottom: 0;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: #9a31fd;
    opacity: 0;
    transition: transform 0.15s cubic-bezier(0.02, 0.01, 0.47, 1), opacity 0.15s cubic-bezier(0.02, 0.01, 0.47, 1);
    z-index: -1;
    transform: translate(100%, -25%) translate3d(0, 0, 0);
  }
  
  .remind-btn button:hover::before,
  .remind-btn button:hover::after {
    opacity: 0.15;
    transition: transform 0.2s cubic-bezier(0.02, 0.01, 0.47, 1), opacity 0.2s cubic-bezier(0.02, 0.01, 0.47, 1);
  }
  
  .remind-btn button:hover::before {
    transform: translate3d(50%, 0, 0) scale(0.9);
  }
  
  .remind-btn button:hover::after {
    transform: translate(50%, 0) scale(1.1);
  }
  
  
.content-box {
    position: relative;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    overflow: hidden; /* Giới hạn nền quay trong khung */
    z-index: 1;
    background: #fff; /* Đảm bảo nền chính là màu trắng */
}

/* Lớp nền quay */
.content-box::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        90deg,
        rgb(253, 235, 255) 0%,
        rgb(234, 198, 253) 49%,
        rgb(255, 191, 189) 100%
    );
    border-radius: 50%;
    animation: rotate-background 5s linear infinite;
    z-index: -1;
}

.content-box .content {
    position: relative;
    z-index: 2;
}
.content-title input {
    font-size: 26px;
    font-weight: bold;
    width: 100%;
    border: none;
    outline: none;
    padding: 5px;
    background-color: transparent;
}

.content-area textarea {
    width: 100%;
    height: 500px;
    padding: 10px;
    font-size: 18px;
    border: none;
    outline: none;
    background: #ffffff;
    border-radius: 10px;
    resize: none;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
}

.time-remind {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 20px;
    padding-left: 15px;
    margin-top: 30px;
    margin-bottom: 56px;
}

.time-setting-btn{
    position: relative;
    background-color: #fcfcfc;
    padding: 10px;
    border-radius: 10px;
    text-align: center;
    font-size: 20px;
    transition: all 0.3s cubic-bezier(0.23, 1, 0.320, 1);
    overflow: hidden;
    cursor: pointer;
}
.time-setting-btn::before {
    content: '';
    position: absolute;
    inset: 0;
    margin: auto;
    width: 60px;
    height: 60px;
    border-radius: inherit;
    scale: 0;
    z-index: -1;
    background: linear-gradient(120deg, #FAD0C4 20%, #C3EBEA 80%);
    transition: all 0.6s cubic-bezier(0.23, 1, 0.320, 1);
  }
  
.time-setting-btn:hover {
    color: #212121;
    scale: 1.1;
    box-shadow: 0 0px 20px rgba(110, 30, 184, 0.623)
  }

  .time-setting-btn:active {
    scale: 1;
  }
  .time-setting-btn:hover::before {
    scale: 3;
  }
.time-showing {
    background: #ffffff;
    padding-top: 17px;
    border-radius: 10px;
    border: none;
    text-align: center;
    font-size: 25px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
}

.calendar-error-message {
    font-size: 1.6em;
    color: #000;
    position: absolute;
    bottom: 20px;
    left: 20px;
    background: rgba(255, 255, 255, 0.8);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.delete-icon {
    font-size: 20px;
    cursor: pointer;
    color: #444;
    transition: color 0.2s;
}

.delete-icon:hover {
    color: red;
}
@keyframes jelly {
    from {
      transform: scale(1, 1);
    }
  
    20% {
      transform: scale(1.3, 0.7);
    }
  
    40% {
      transform: scale(0.7, 1.3);
    }
  
    60% {
      transform: scale(1.1, 0.9);
    }
  
    80% {
      transform: scale(0.9, 1.1);
    }
  
    to {
      transform: scale(1, 1);
    }
  }

  @keyframes effect {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

@keyframes ripple {
    to {
        transform: translate(-50%, -50%) scale(2.5);
        opacity: 0;
    }
}
@keyframes sh0 {
    0% {
      transform: rotate(0deg) translate3d(0, 0, 0);
    }
  
    25% {
      transform: rotate(7deg) translate3d(0, 0, 0);
    }
  
    50% {
      transform: rotate(-7deg) translate3d(0, 0, 0);
    }
  
    75% {
      transform: rotate(1deg) translate3d(0, 0, 0);
    }
  
    100% {
      transform: rotate(0deg) translate3d(0, 0, 0);
    }
  }
  @keyframes rotate-background {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}